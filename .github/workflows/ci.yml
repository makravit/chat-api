name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
      IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }}
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
      - name: Set Poetry Python version
        run: |
          poetry env use 3.13
      - name: Update poetry.lock if needed
        run: |
          poetry lock
      - name: Install dependencies with Poetry
        run: |
          poetry install
      - name: Show versions
        run: |
          poetry run pre-commit --version
          poetry run isort --version-number
      - name: Run pre-commit checks (check-only, do not auto-fix)
        run: |
          poetry run pre-commit run --all-files --show-diff-on-failure --color=always
      - name: Run tests
        run: |
          poetry run pytest --cov=app --cov-report=term-missing --cov-report=html tests/unit tests/integration
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: htmlcov
          path: htmlcov/
      - name: Build Docker image
        run: |
          set -e
          docker build -t $REGISTRY/$IMAGE_NAME:$IMAGE_TAG .
      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Docker image
        run: |
          set -e
          docker push $REGISTRY/$IMAGE_NAME:$IMAGE_TAG
